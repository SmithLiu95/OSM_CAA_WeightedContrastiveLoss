
### Training Set
name: "GoogleNet"
input: "data"
input_dim: 54
input_dim: 3
input_dim: 224
input_dim: 224

input: "label"
input_dim: 54
input_dim: 1
input_dim: 1
input_dim: 1


input: "tracklet_label"
input_dim: 6
input_dim: 1
input_dim: 1
input_dim: 1



input: "image_attention"
input_dim: 54
input_dim: 1
input_dim: 1
input_dim: 1

input: "tracklet_attention"
input_dim: 6
input_dim: 1
input_dim: 1
input_dim: 1


layer {
 bottom: "data"
  top: "conv1/7x7_s2"
  name: "conv1/7x7_s2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv1/7x7_s2"
  name: "conv1/7x7_s2/bn"
  top: "conv1/7x7_s2/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "conv1/7x7_s2/bn"
  top: "conv1/7x7_s2/bn/sc"
  name: "conv1/7x7_s2/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "conv1/7x7_s2/bn/sc"
  top: "conv1/7x7_s2/bn/sc"
  name: "conv1/7x7_s2/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "conv1/7x7_s2/bn/sc"
  top: "pool1/3x3_s2"
  name: "pool1/3x3_s2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
 bottom: "pool1/3x3_s2"
  top: "conv2/3x3_reduce"
  name: "conv2/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv2/3x3_reduce"
  name: "conv2/3x3_reduce/bn"
  top: "conv2/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "conv2/3x3_reduce/bn"
  top: "conv2/3x3_reduce/bn/sc"
  name: "conv2/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "conv2/3x3_reduce/bn/sc"
  top: "conv2/3x3_reduce/bn/sc"
  name: "conv2/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "conv2/3x3_reduce/bn/sc"
  top: "conv2/3x3"
  name: "conv2/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv2/3x3"
  name: "conv2/3x3/bn"
  top: "conv2/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "conv2/3x3/bn"
  top: "conv2/3x3/bn/sc"
  name: "conv2/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "conv2/3x3/bn/sc"
  top: "conv2/3x3/bn/sc"
  name: "conv2/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "conv2/3x3/bn/sc"
  top: "pool2/3x3_s2"
  name: "pool2/3x3_s2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
 bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  name: "inception_3a/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/1x1"
  name: "inception_3a/1x1/bn"
  top: "inception_3a/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/1x1/bn"
  top: "inception_3a/1x1/bn/sc"
  name: "inception_3a/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/1x1/bn/sc"
  top: "inception_3a/1x1/bn/sc"
  name: "inception_3a/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/3x3_reduce"
  name: "inception_3a/3x3_reduce/bn"
  top: "inception_3a/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/3x3_reduce/bn"
  top: "inception_3a/3x3_reduce/bn/sc"
  name: "inception_3a/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/3x3_reduce/bn/sc"
  top: "inception_3a/3x3_reduce/bn/sc"
  name: "inception_3a/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3a/3x3_reduce/bn/sc"
  top: "inception_3a/3x3"
  name: "inception_3a/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/3x3"
  name: "inception_3a/3x3/bn"
  top: "inception_3a/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/3x3/bn"
  top: "inception_3a/3x3/bn/sc"
  name: "inception_3a/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/3x3/bn/sc"
  top: "inception_3a/3x3/bn/sc"
  name: "inception_3a/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "pool2/3x3_s2"
  top: "inception_3a/double3x3_reduce"
  name: "inception_3a/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/double3x3_reduce"
  name: "inception_3a/double3x3_reduce/bn"
  top: "inception_3a/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/double3x3_reduce/bn"
  top: "inception_3a/double3x3_reduce/bn/sc"
  name: "inception_3a/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/double3x3_reduce/bn/sc"
  top: "inception_3a/double3x3_reduce/bn/sc"
  name: "inception_3a/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3a/double3x3_reduce/bn/sc"
  top: "inception_3a/double3x3a"
  name: "inception_3a/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/double3x3a"
  name: "inception_3a/double3x3a/bn"
  top: "inception_3a/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/double3x3a/bn"
  top: "inception_3a/double3x3a/bn/sc"
  name: "inception_3a/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/double3x3a/bn/sc"
  top: "inception_3a/double3x3a/bn/sc"
  name: "inception_3a/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3a/double3x3a/bn/sc"
  top: "inception_3a/double3x3b"
  name: "inception_3a/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/double3x3b"
  name: "inception_3a/double3x3b/bn"
  top: "inception_3a/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/double3x3b/bn"
  top: "inception_3a/double3x3b/bn/sc"
  name: "inception_3a/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/double3x3b/bn/sc"
  top: "inception_3a/double3x3b/bn/sc"
  name: "inception_3a/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  name: "inception_3a/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  name: "inception_3a/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3a/pool_proj"
  name: "inception_3a/pool_proj/bn"
  top: "inception_3a/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3a/pool_proj/bn"
  top: "inception_3a/pool_proj/bn/sc"
  name: "inception_3a/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3a/pool_proj/bn/sc"
  top: "inception_3a/pool_proj/bn/sc"
  name: "inception_3a/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/1x1/bn/sc"
  bottom: "inception_3a/3x3/bn/sc"
  bottom: "inception_3a/double3x3b/bn/sc"
  bottom: "inception_3a/pool_proj/bn/sc"
  top: "inception_3a/output"
  name: "inception_3a/output"
  type: "Concat"
}
layer {
 bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  name: "inception_3b/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/1x1"
  name: "inception_3b/1x1/bn"
  top: "inception_3b/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/1x1/bn"
  top: "inception_3b/1x1/bn/sc"
  name: "inception_3b/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/1x1/bn/sc"
  top: "inception_3b/1x1/bn/sc"
  name: "inception_3b/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/3x3_reduce"
  name: "inception_3b/3x3_reduce/bn"
  top: "inception_3b/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/3x3_reduce/bn"
  top: "inception_3b/3x3_reduce/bn/sc"
  name: "inception_3b/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/3x3_reduce/bn/sc"
  top: "inception_3b/3x3_reduce/bn/sc"
  name: "inception_3b/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3b/3x3_reduce/bn/sc"
  top: "inception_3b/3x3"
  name: "inception_3b/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/3x3"
  name: "inception_3b/3x3/bn"
  top: "inception_3b/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/3x3/bn"
  top: "inception_3b/3x3/bn/sc"
  name: "inception_3b/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/3x3/bn/sc"
  top: "inception_3b/3x3/bn/sc"
  name: "inception_3b/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3a/output"
  top: "inception_3b/double3x3_reduce"
  name: "inception_3b/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/double3x3_reduce"
  name: "inception_3b/double3x3_reduce/bn"
  top: "inception_3b/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/double3x3_reduce/bn"
  top: "inception_3b/double3x3_reduce/bn/sc"
  name: "inception_3b/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/double3x3_reduce/bn/sc"
  top: "inception_3b/double3x3_reduce/bn/sc"
  name: "inception_3b/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3b/double3x3_reduce/bn/sc"
  top: "inception_3b/double3x3a"
  name: "inception_3b/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/double3x3a"
  name: "inception_3b/double3x3a/bn"
  top: "inception_3b/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/double3x3a/bn"
  top: "inception_3b/double3x3a/bn/sc"
  name: "inception_3b/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/double3x3a/bn/sc"
  top: "inception_3b/double3x3a/bn/sc"
  name: "inception_3b/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3b/double3x3a/bn/sc"
  top: "inception_3b/double3x3b"
  name: "inception_3b/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/double3x3b"
  name: "inception_3b/double3x3b/bn"
  top: "inception_3b/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/double3x3b/bn"
  top: "inception_3b/double3x3b/bn/sc"
  name: "inception_3b/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/double3x3b/bn/sc"
  top: "inception_3b/double3x3b/bn/sc"
  name: "inception_3b/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  name: "inception_3b/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  name: "inception_3b/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3b/pool_proj"
  name: "inception_3b/pool_proj/bn"
  top: "inception_3b/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3b/pool_proj/bn"
  top: "inception_3b/pool_proj/bn/sc"
  name: "inception_3b/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3b/pool_proj/bn/sc"
  top: "inception_3b/pool_proj/bn/sc"
  name: "inception_3b/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/1x1/bn/sc"
  bottom: "inception_3b/3x3/bn/sc"
  bottom: "inception_3b/double3x3b/bn/sc"
  bottom: "inception_3b/pool_proj/bn/sc"
  top: "inception_3b/output"
  name: "inception_3b/output"
  type: "Concat"
}
layer {
 bottom: "inception_3b/output"
  top: "inception_3c/3x3_reduce"
  name: "inception_3c/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3c/3x3_reduce"
  name: "inception_3c/3x3_reduce/bn"
  top: "inception_3c/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3c/3x3_reduce/bn"
  top: "inception_3c/3x3_reduce/bn/sc"
  name: "inception_3c/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3c/3x3_reduce/bn/sc"
  top: "inception_3c/3x3_reduce/bn/sc"
  name: "inception_3c/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3c/3x3_reduce/bn/sc"
  top: "inception_3c/3x3"
  name: "inception_3c/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3c/3x3"
  name: "inception_3c/3x3/bn"
  top: "inception_3c/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3c/3x3/bn"
  top: "inception_3c/3x3/bn/sc"
  name: "inception_3c/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3c/3x3/bn/sc"
  top: "inception_3c/3x3/bn/sc"
  name: "inception_3c/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3b/output"
  top: "inception_3c/double3x3_reduce"
  name: "inception_3c/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3c/double3x3_reduce"
  name: "inception_3c/double3x3_reduce/bn"
  top: "inception_3c/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3c/double3x3_reduce/bn"
  top: "inception_3c/double3x3_reduce/bn/sc"
  name: "inception_3c/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3c/double3x3_reduce/bn/sc"
  top: "inception_3c/double3x3_reduce/bn/sc"
  name: "inception_3c/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3c/double3x3_reduce/bn/sc"
  top: "inception_3c/double3x3a"
  name: "inception_3c/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3c/double3x3a"
  name: "inception_3c/double3x3a/bn"
  top: "inception_3c/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3c/double3x3a/bn"
  top: "inception_3c/double3x3a/bn/sc"
  name: "inception_3c/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3c/double3x3a/bn/sc"
  top: "inception_3c/double3x3a/bn/sc"
  name: "inception_3c/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3c/double3x3a/bn/sc"
  top: "inception_3c/double3x3b"
  name: "inception_3c/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_3c/double3x3b"
  name: "inception_3c/double3x3b/bn"
  top: "inception_3c/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_3c/double3x3b/bn"
  top: "inception_3c/double3x3b/bn/sc"
  name: "inception_3c/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_3c/double3x3b/bn/sc"
  top: "inception_3c/double3x3b/bn/sc"
  name: "inception_3c/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/output"
  top: "inception_3c/pool"
  name: "inception_3c/pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "inception_3c/3x3/bn/sc"
  bottom: "inception_3c/double3x3b/bn/sc"
  bottom: "inception_3c/pool"
  top: "inception_3c/output"
  name: "inception_3c/output"
  type: "Concat"
}
layer {
  bottom: "inception_3c/output"
  top: "pool3/5x5_s3"
  name: "pool3/5x5_s3"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
 bottom: "pool3/5x5_s3"
  top: "loss1/conv"
  name: "loss1/conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "loss1/conv"
  name: "loss1/conv/bn"
  top: "loss1/conv/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "loss1/conv/bn"
  top: "loss1/conv/bn/sc"
  name: "loss1/conv/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "loss1/conv/bn/sc"
  top: "loss1/conv/bn/sc"
  name: "loss1/conv/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "loss1/conv/bn/sc"
  top: "loss1/fc"
  name: "loss1/fc"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "loss1/fc"
  name: "loss1/fc/bn"
  top: "loss1/fc/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "loss1/fc/bn"
  top: "loss1/fc/bn/sc"
  name: "loss1/fc/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "loss1/fc/bn/sc"
  top: "loss1/fc/bn/sc"
  name: "loss1/fc/bn/sc/relu"
  type: "ReLU"
}












layer {
  bottom: "loss1/fc/bn/sc"
  top: "loss1/classifier_1"
  name: "loss1/classifier_1"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 625
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  bottom: "loss1/classifier_1"
  top: "loss1/prob"
  name: "loss1/prob"
  type: "Softmax"
}



layer{
  name: "prob1"
  bottom: "loss1/prob"
  bottom: "label"

  top: "prob1"
  
  type: "ExtractProb"
  propagate_down: 0
  propagate_down: 0
}
layer{
  name: "gaussian/prob1"
  bottom: "prob1"
  top: "gaussian/prob1"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.18
    mean: 0.5
  }
  propagate_down: 0
}
layer{
  name: "l1_norm/prob1"
  bottom: "gaussian/prob1"
  top: "l1_norm/prob1"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}


layer {
  bottom: "loss1/classifier_1"
  bottom: "label"
  bottom: "l1_norm/prob1"

  top: "loss1/loss"
  name: "loss1/loss"
  type: "WeightedSoftmaxWithLoss"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
}







layer {
 bottom: "inception_3c/output"
  top: "inception_4a/1x1"
  name: "inception_4a/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/1x1"
  name: "inception_4a/1x1/bn"
  top: "inception_4a/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/1x1/bn"
  top: "inception_4a/1x1/bn/sc"
  name: "inception_4a/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/1x1/bn/sc"
  top: "inception_4a/1x1/bn/sc"
  name: "inception_4a/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3c/output"
  top: "inception_4a/3x3_reduce"
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/3x3_reduce"
  name: "inception_4a/3x3_reduce/bn"
  top: "inception_4a/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/3x3_reduce/bn"
  top: "inception_4a/3x3_reduce/bn/sc"
  name: "inception_4a/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/3x3_reduce/bn/sc"
  top: "inception_4a/3x3_reduce/bn/sc"
  name: "inception_4a/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4a/3x3_reduce/bn/sc"
  top: "inception_4a/3x3"
  name: "inception_4a/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/3x3"
  name: "inception_4a/3x3/bn"
  top: "inception_4a/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/3x3/bn"
  top: "inception_4a/3x3/bn/sc"
  name: "inception_4a/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/3x3/bn/sc"
  top: "inception_4a/3x3/bn/sc"
  name: "inception_4a/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_3c/output"
  top: "inception_4a/double3x3_reduce"
  name: "inception_4a/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/double3x3_reduce"
  name: "inception_4a/double3x3_reduce/bn"
  top: "inception_4a/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/double3x3_reduce/bn"
  top: "inception_4a/double3x3_reduce/bn/sc"
  name: "inception_4a/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/double3x3_reduce/bn/sc"
  top: "inception_4a/double3x3_reduce/bn/sc"
  name: "inception_4a/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4a/double3x3_reduce/bn/sc"
  top: "inception_4a/double3x3a"
  name: "inception_4a/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/double3x3a"
  name: "inception_4a/double3x3a/bn"
  top: "inception_4a/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/double3x3a/bn"
  top: "inception_4a/double3x3a/bn/sc"
  name: "inception_4a/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/double3x3a/bn/sc"
  top: "inception_4a/double3x3a/bn/sc"
  name: "inception_4a/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4a/double3x3a/bn/sc"
  top: "inception_4a/double3x3b"
  name: "inception_4a/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/double3x3b"
  name: "inception_4a/double3x3b/bn"
  top: "inception_4a/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/double3x3b/bn"
  top: "inception_4a/double3x3b/bn/sc"
  name: "inception_4a/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/double3x3b/bn/sc"
  top: "inception_4a/double3x3b/bn/sc"
  name: "inception_4a/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/output"
  top: "inception_4a/pool"
  name: "inception_4a/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  name: "inception_4a/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4a/pool_proj"
  name: "inception_4a/pool_proj/bn"
  top: "inception_4a/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4a/pool_proj/bn"
  top: "inception_4a/pool_proj/bn/sc"
  name: "inception_4a/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4a/pool_proj/bn/sc"
  top: "inception_4a/pool_proj/bn/sc"
  name: "inception_4a/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/1x1/bn/sc"
  bottom: "inception_4a/3x3/bn/sc"
  bottom: "inception_4a/double3x3b/bn/sc"
  bottom: "inception_4a/pool_proj/bn/sc"
  top: "inception_4a/output"
  name: "inception_4a/output"
  type: "Concat"
}
layer {
 bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  name: "inception_4b/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/1x1"
  name: "inception_4b/1x1/bn"
  top: "inception_4b/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/1x1/bn"
  top: "inception_4b/1x1/bn/sc"
  name: "inception_4b/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/1x1/bn/sc"
  top: "inception_4b/1x1/bn/sc"
  name: "inception_4b/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/3x3_reduce"
  name: "inception_4b/3x3_reduce/bn"
  top: "inception_4b/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/3x3_reduce/bn"
  top: "inception_4b/3x3_reduce/bn/sc"
  name: "inception_4b/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/3x3_reduce/bn/sc"
  top: "inception_4b/3x3_reduce/bn/sc"
  name: "inception_4b/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4b/3x3_reduce/bn/sc"
  top: "inception_4b/3x3"
  name: "inception_4b/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/3x3"
  name: "inception_4b/3x3/bn"
  top: "inception_4b/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/3x3/bn"
  top: "inception_4b/3x3/bn/sc"
  name: "inception_4b/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/3x3/bn/sc"
  top: "inception_4b/3x3/bn/sc"
  name: "inception_4b/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4a/output"
  top: "inception_4b/double3x3_reduce"
  name: "inception_4b/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/double3x3_reduce"
  name: "inception_4b/double3x3_reduce/bn"
  top: "inception_4b/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/double3x3_reduce/bn"
  top: "inception_4b/double3x3_reduce/bn/sc"
  name: "inception_4b/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/double3x3_reduce/bn/sc"
  top: "inception_4b/double3x3_reduce/bn/sc"
  name: "inception_4b/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4b/double3x3_reduce/bn/sc"
  top: "inception_4b/double3x3a"
  name: "inception_4b/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/double3x3a"
  name: "inception_4b/double3x3a/bn"
  top: "inception_4b/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/double3x3a/bn"
  top: "inception_4b/double3x3a/bn/sc"
  name: "inception_4b/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/double3x3a/bn/sc"
  top: "inception_4b/double3x3a/bn/sc"
  name: "inception_4b/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4b/double3x3a/bn/sc"
  top: "inception_4b/double3x3b"
  name: "inception_4b/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/double3x3b"
  name: "inception_4b/double3x3b/bn"
  top: "inception_4b/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/double3x3b/bn"
  top: "inception_4b/double3x3b/bn/sc"
  name: "inception_4b/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/double3x3b/bn/sc"
  top: "inception_4b/double3x3b/bn/sc"
  name: "inception_4b/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  name: "inception_4b/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  name: "inception_4b/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4b/pool_proj"
  name: "inception_4b/pool_proj/bn"
  top: "inception_4b/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4b/pool_proj/bn"
  top: "inception_4b/pool_proj/bn/sc"
  name: "inception_4b/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4b/pool_proj/bn/sc"
  top: "inception_4b/pool_proj/bn/sc"
  name: "inception_4b/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/1x1/bn/sc"
  bottom: "inception_4b/3x3/bn/sc"
  bottom: "inception_4b/double3x3b/bn/sc"
  bottom: "inception_4b/pool_proj/bn/sc"
  top: "inception_4b/output"
  name: "inception_4b/output"
  type: "Concat"
}
layer {
 bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  name: "inception_4c/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/1x1"
  name: "inception_4c/1x1/bn"
  top: "inception_4c/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/1x1/bn"
  top: "inception_4c/1x1/bn/sc"
  name: "inception_4c/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/1x1/bn/sc"
  top: "inception_4c/1x1/bn/sc"
  name: "inception_4c/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/3x3_reduce"
  name: "inception_4c/3x3_reduce/bn"
  top: "inception_4c/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/3x3_reduce/bn"
  top: "inception_4c/3x3_reduce/bn/sc"
  name: "inception_4c/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/3x3_reduce/bn/sc"
  top: "inception_4c/3x3_reduce/bn/sc"
  name: "inception_4c/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4c/3x3_reduce/bn/sc"
  top: "inception_4c/3x3"
  name: "inception_4c/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/3x3"
  name: "inception_4c/3x3/bn"
  top: "inception_4c/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/3x3/bn"
  top: "inception_4c/3x3/bn/sc"
  name: "inception_4c/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/3x3/bn/sc"
  top: "inception_4c/3x3/bn/sc"
  name: "inception_4c/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4b/output"
  top: "inception_4c/double3x3_reduce"
  name: "inception_4c/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/double3x3_reduce"
  name: "inception_4c/double3x3_reduce/bn"
  top: "inception_4c/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/double3x3_reduce/bn"
  top: "inception_4c/double3x3_reduce/bn/sc"
  name: "inception_4c/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/double3x3_reduce/bn/sc"
  top: "inception_4c/double3x3_reduce/bn/sc"
  name: "inception_4c/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4c/double3x3_reduce/bn/sc"
  top: "inception_4c/double3x3a"
  name: "inception_4c/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/double3x3a"
  name: "inception_4c/double3x3a/bn"
  top: "inception_4c/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/double3x3a/bn"
  top: "inception_4c/double3x3a/bn/sc"
  name: "inception_4c/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/double3x3a/bn/sc"
  top: "inception_4c/double3x3a/bn/sc"
  name: "inception_4c/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4c/double3x3a/bn/sc"
  top: "inception_4c/double3x3b"
  name: "inception_4c/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/double3x3b"
  name: "inception_4c/double3x3b/bn"
  top: "inception_4c/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/double3x3b/bn"
  top: "inception_4c/double3x3b/bn/sc"
  name: "inception_4c/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/double3x3b/bn/sc"
  top: "inception_4c/double3x3b/bn/sc"
  name: "inception_4c/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  name: "inception_4c/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  name: "inception_4c/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4c/pool_proj"
  name: "inception_4c/pool_proj/bn"
  top: "inception_4c/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4c/pool_proj/bn"
  top: "inception_4c/pool_proj/bn/sc"
  name: "inception_4c/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4c/pool_proj/bn/sc"
  top: "inception_4c/pool_proj/bn/sc"
  name: "inception_4c/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/1x1/bn/sc"
  bottom: "inception_4c/3x3/bn/sc"
  bottom: "inception_4c/double3x3b/bn/sc"
  bottom: "inception_4c/pool_proj/bn/sc"
  top: "inception_4c/output"
  name: "inception_4c/output"
  type: "Concat"
}
layer {
 bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  name: "inception_4d/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/1x1"
  name: "inception_4d/1x1/bn"
  top: "inception_4d/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/1x1/bn"
  top: "inception_4d/1x1/bn/sc"
  name: "inception_4d/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/1x1/bn/sc"
  top: "inception_4d/1x1/bn/sc"
  name: "inception_4d/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/3x3_reduce"
  name: "inception_4d/3x3_reduce/bn"
  top: "inception_4d/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/3x3_reduce/bn"
  top: "inception_4d/3x3_reduce/bn/sc"
  name: "inception_4d/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/3x3_reduce/bn/sc"
  top: "inception_4d/3x3_reduce/bn/sc"
  name: "inception_4d/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4d/3x3_reduce/bn/sc"
  top: "inception_4d/3x3"
  name: "inception_4d/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/3x3"
  name: "inception_4d/3x3/bn"
  top: "inception_4d/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/3x3/bn"
  top: "inception_4d/3x3/bn/sc"
  name: "inception_4d/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/3x3/bn/sc"
  top: "inception_4d/3x3/bn/sc"
  name: "inception_4d/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4c/output"
  top: "inception_4d/double3x3_reduce"
  name: "inception_4d/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/double3x3_reduce"
  name: "inception_4d/double3x3_reduce/bn"
  top: "inception_4d/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/double3x3_reduce/bn"
  top: "inception_4d/double3x3_reduce/bn/sc"
  name: "inception_4d/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/double3x3_reduce/bn/sc"
  top: "inception_4d/double3x3_reduce/bn/sc"
  name: "inception_4d/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4d/double3x3_reduce/bn/sc"
  top: "inception_4d/double3x3a"
  name: "inception_4d/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/double3x3a"
  name: "inception_4d/double3x3a/bn"
  top: "inception_4d/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/double3x3a/bn"
  top: "inception_4d/double3x3a/bn/sc"
  name: "inception_4d/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/double3x3a/bn/sc"
  top: "inception_4d/double3x3a/bn/sc"
  name: "inception_4d/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4d/double3x3a/bn/sc"
  top: "inception_4d/double3x3b"
  name: "inception_4d/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/double3x3b"
  name: "inception_4d/double3x3b/bn"
  top: "inception_4d/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/double3x3b/bn"
  top: "inception_4d/double3x3b/bn/sc"
  name: "inception_4d/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/double3x3b/bn/sc"
  top: "inception_4d/double3x3b/bn/sc"
  name: "inception_4d/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  name: "inception_4d/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  name: "inception_4d/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4d/pool_proj"
  name: "inception_4d/pool_proj/bn"
  top: "inception_4d/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4d/pool_proj/bn"
  top: "inception_4d/pool_proj/bn/sc"
  name: "inception_4d/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4d/pool_proj/bn/sc"
  top: "inception_4d/pool_proj/bn/sc"
  name: "inception_4d/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/1x1/bn/sc"
  bottom: "inception_4d/3x3/bn/sc"
  bottom: "inception_4d/double3x3b/bn/sc"
  bottom: "inception_4d/pool_proj/bn/sc"
  top: "inception_4d/output"
  name: "inception_4d/output"
  type: "Concat"
}
layer {
 bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4e/3x3_reduce"
  name: "inception_4e/3x3_reduce/bn"
  top: "inception_4e/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4e/3x3_reduce/bn"
  top: "inception_4e/3x3_reduce/bn/sc"
  name: "inception_4e/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4e/3x3_reduce/bn/sc"
  top: "inception_4e/3x3_reduce/bn/sc"
  name: "inception_4e/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4e/3x3_reduce/bn/sc"
  top: "inception_4e/3x3"
  name: "inception_4e/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4e/3x3"
  name: "inception_4e/3x3/bn"
  top: "inception_4e/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4e/3x3/bn"
  top: "inception_4e/3x3/bn/sc"
  name: "inception_4e/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4e/3x3/bn/sc"
  top: "inception_4e/3x3/bn/sc"
  name: "inception_4e/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4d/output"
  top: "inception_4e/double3x3_reduce"
  name: "inception_4e/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4e/double3x3_reduce"
  name: "inception_4e/double3x3_reduce/bn"
  top: "inception_4e/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4e/double3x3_reduce/bn"
  top: "inception_4e/double3x3_reduce/bn/sc"
  name: "inception_4e/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4e/double3x3_reduce/bn/sc"
  top: "inception_4e/double3x3_reduce/bn/sc"
  name: "inception_4e/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4e/double3x3_reduce/bn/sc"
  top: "inception_4e/double3x3a"
  name: "inception_4e/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4e/double3x3a"
  name: "inception_4e/double3x3a/bn"
  top: "inception_4e/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4e/double3x3a/bn"
  top: "inception_4e/double3x3a/bn/sc"
  name: "inception_4e/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4e/double3x3a/bn/sc"
  top: "inception_4e/double3x3a/bn/sc"
  name: "inception_4e/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4e/double3x3a/bn/sc"
  top: "inception_4e/double3x3b"
  name: "inception_4e/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_4e/double3x3b"
  name: "inception_4e/double3x3b/bn"
  top: "inception_4e/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_4e/double3x3b/bn"
  top: "inception_4e/double3x3b/bn/sc"
  name: "inception_4e/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_4e/double3x3b/bn/sc"
  top: "inception_4e/double3x3b/bn/sc"
  name: "inception_4e/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/output"
  top: "inception_4e/pool"
  name: "inception_4e/pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "inception_4e/3x3/bn/sc"
  bottom: "inception_4e/double3x3b/bn/sc"
  bottom: "inception_4e/pool"
  top: "inception_4e/output"
  name: "inception_4e/output"
  type: "Concat"
}
layer {
  bottom: "inception_4e/output"
  top: "pool4/5x5_s3"
  name: "pool4/5x5_s3"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
 bottom: "pool4/5x5_s3"
  top: "loss2/conv"
  name: "loss2/conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "loss2/conv"
  name: "loss2/conv/bn"
  top: "loss2/conv/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "loss2/conv/bn"
  top: "loss2/conv/bn/sc"
  name: "loss2/conv/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "loss2/conv/bn/sc"
  top: "loss2/conv/bn/sc"
  name: "loss2/conv/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "loss2/conv/bn/sc"
  top: "loss2/fc"
  name: "loss2/fc"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "loss2/fc"
  name: "loss2/fc/bn"
  top: "loss2/fc/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "loss2/fc/bn"
  top: "loss2/fc/bn/sc"
  name: "loss2/fc/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "loss2/fc/bn/sc"
  top: "loss2/fc/bn/sc"
  name: "loss2/fc/bn/sc/relu"
  type: "ReLU"
}



layer {
  bottom: "loss2/fc/bn/sc"
  top: "loss2/classifier_1"
  name: "loss2/classifier_1"
  type: "InnerProduct"
  param {
    name: "ip_w2"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip_b2"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 625
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  bottom: "loss2/classifier_1"
  top: "loss2/prob"
  name: "loss2/prob"
  type: "Softmax"
}




layer{
  name: "prob2"
  bottom: "loss2/prob"
  bottom: "label"

  top: "prob2"
  
  type: "ExtractProb"
  propagate_down: 0
  propagate_down: 0
}
layer{
  name: "gaussian/prob2"
  bottom: "prob2"
  top: "gaussian/prob2"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.18
    mean: 0.5
  }
  propagate_down: 0
}
layer{
  name: "l1_norm/prob2"
  bottom: "gaussian/prob2"
  top: "l1_norm/prob2"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}







layer {
  bottom: "loss2/classifier_1"
  bottom: "label"
  bottom: "l1_norm/prob2"

  top: "loss2/loss"
  name: "loss2/loss"
  type: "WeightedSoftmaxWithLoss"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
}










layer {
 bottom: "inception_4e/output"
  top: "inception_5a/1x1"
  name: "inception_5a/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 352
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/1x1"
  name: "inception_5a/1x1/bn"
  top: "inception_5a/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/1x1/bn"
  top: "inception_5a/1x1/bn/sc"
  name: "inception_5a/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/1x1/bn/sc"
  top: "inception_5a/1x1/bn/sc"
  name: "inception_5a/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4e/output"
  top: "inception_5a/3x3_reduce"
  name: "inception_5a/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/3x3_reduce"
  name: "inception_5a/3x3_reduce/bn"
  top: "inception_5a/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/3x3_reduce/bn"
  top: "inception_5a/3x3_reduce/bn/sc"
  name: "inception_5a/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/3x3_reduce/bn/sc"
  top: "inception_5a/3x3_reduce/bn/sc"
  name: "inception_5a/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5a/3x3_reduce/bn/sc"
  top: "inception_5a/3x3"
  name: "inception_5a/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/3x3"
  name: "inception_5a/3x3/bn"
  top: "inception_5a/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/3x3/bn"
  top: "inception_5a/3x3/bn/sc"
  name: "inception_5a/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/3x3/bn/sc"
  top: "inception_5a/3x3/bn/sc"
  name: "inception_5a/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_4e/output"
  top: "inception_5a/double3x3_reduce"
  name: "inception_5a/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/double3x3_reduce"
  name: "inception_5a/double3x3_reduce/bn"
  top: "inception_5a/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/double3x3_reduce/bn"
  top: "inception_5a/double3x3_reduce/bn/sc"
  name: "inception_5a/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/double3x3_reduce/bn/sc"
  top: "inception_5a/double3x3_reduce/bn/sc"
  name: "inception_5a/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5a/double3x3_reduce/bn/sc"
  top: "inception_5a/double3x3a"
  name: "inception_5a/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/double3x3a"
  name: "inception_5a/double3x3a/bn"
  top: "inception_5a/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/double3x3a/bn"
  top: "inception_5a/double3x3a/bn/sc"
  name: "inception_5a/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/double3x3a/bn/sc"
  top: "inception_5a/double3x3a/bn/sc"
  name: "inception_5a/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5a/double3x3a/bn/sc"
  top: "inception_5a/double3x3b"
  name: "inception_5a/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/double3x3b"
  name: "inception_5a/double3x3b/bn"
  top: "inception_5a/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/double3x3b/bn"
  top: "inception_5a/double3x3b/bn/sc"
  name: "inception_5a/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/double3x3b/bn/sc"
  top: "inception_5a/double3x3b/bn/sc"
  name: "inception_5a/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_4e/output"
  top: "inception_5a/pool"
  name: "inception_5a/pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_5a/pool"
  top: "inception_5a/pool_proj"
  name: "inception_5a/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5a/pool_proj"
  name: "inception_5a/pool_proj/bn"
  top: "inception_5a/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5a/pool_proj/bn"
  top: "inception_5a/pool_proj/bn/sc"
  name: "inception_5a/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5a/pool_proj/bn/sc"
  top: "inception_5a/pool_proj/bn/sc"
  name: "inception_5a/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_5a/1x1/bn/sc"
  bottom: "inception_5a/3x3/bn/sc"
  bottom: "inception_5a/double3x3b/bn/sc"
  bottom: "inception_5a/pool_proj/bn/sc"
  top: "inception_5a/output"
  name: "inception_5a/output"
  type: "Concat"
}
layer {
 bottom: "inception_5a/output"
  top: "inception_5b/1x1"
  name: "inception_5b/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 352
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/1x1"
  name: "inception_5b/1x1/bn"
  top: "inception_5b/1x1/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/1x1/bn"
  top: "inception_5b/1x1/bn/sc"
  name: "inception_5b/1x1/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/1x1/bn/sc"
  top: "inception_5b/1x1/bn/sc"
  name: "inception_5b/1x1/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5a/output"
  top: "inception_5b/3x3_reduce"
  name: "inception_5b/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/3x3_reduce"
  name: "inception_5b/3x3_reduce/bn"
  top: "inception_5b/3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/3x3_reduce/bn"
  top: "inception_5b/3x3_reduce/bn/sc"
  name: "inception_5b/3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/3x3_reduce/bn/sc"
  top: "inception_5b/3x3_reduce/bn/sc"
  name: "inception_5b/3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5b/3x3_reduce/bn/sc"
  top: "inception_5b/3x3"
  name: "inception_5b/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/3x3"
  name: "inception_5b/3x3/bn"
  top: "inception_5b/3x3/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/3x3/bn"
  top: "inception_5b/3x3/bn/sc"
  name: "inception_5b/3x3/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/3x3/bn/sc"
  top: "inception_5b/3x3/bn/sc"
  name: "inception_5b/3x3/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5a/output"
  top: "inception_5b/double3x3_reduce"
  name: "inception_5b/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/double3x3_reduce"
  name: "inception_5b/double3x3_reduce/bn"
  top: "inception_5b/double3x3_reduce/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/double3x3_reduce/bn"
  top: "inception_5b/double3x3_reduce/bn/sc"
  name: "inception_5b/double3x3_reduce/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/double3x3_reduce/bn/sc"
  top: "inception_5b/double3x3_reduce/bn/sc"
  name: "inception_5b/double3x3_reduce/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5b/double3x3_reduce/bn/sc"
  top: "inception_5b/double3x3a"
  name: "inception_5b/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/double3x3a"
  name: "inception_5b/double3x3a/bn"
  top: "inception_5b/double3x3a/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/double3x3a/bn"
  top: "inception_5b/double3x3a/bn/sc"
  name: "inception_5b/double3x3a/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/double3x3a/bn/sc"
  top: "inception_5b/double3x3a/bn/sc"
  name: "inception_5b/double3x3a/bn/sc/relu"
  type: "ReLU"
}
layer {
 bottom: "inception_5b/double3x3a/bn/sc"
  top: "inception_5b/double3x3b"
  name: "inception_5b/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/double3x3b"
  name: "inception_5b/double3x3b/bn"
  top: "inception_5b/double3x3b/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/double3x3b/bn"
  top: "inception_5b/double3x3b/bn/sc"
  name: "inception_5b/double3x3b/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/double3x3b/bn/sc"
  top: "inception_5b/double3x3b/bn/sc"
  name: "inception_5b/double3x3b/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_5a/output"
  top: "inception_5b/pool"
  name: "inception_5b/pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
 bottom: "inception_5b/pool"
  top: "inception_5b/pool_proj"
  name: "inception_5b/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "inception_5b/pool_proj"
  name: "inception_5b/pool_proj/bn"
  top: "inception_5b/pool_proj/bn"
  type: "BatchNorm"   
}
layer {
  bottom: "inception_5b/pool_proj/bn"
  top: "inception_5b/pool_proj/bn/sc"
  name: "inception_5b/pool_proj/bn/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception_5b/pool_proj/bn/sc"
  top: "inception_5b/pool_proj/bn/sc"
  name: "inception_5b/pool_proj/bn/sc/relu"
  type: "ReLU"
}
layer {
  bottom: "inception_5b/1x1/bn/sc"
  bottom: "inception_5b/3x3/bn/sc"
  bottom: "inception_5b/double3x3b/bn/sc"
  bottom: "inception_5b/pool_proj/bn/sc"
  top: "inception_5b/output"
  name: "inception_5b/output"
  type: "Concat"
}
layer {
  bottom: "inception_5b/output"
  top: "pool5/7x7_s1"
  name: "pool5/7x7_s1"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}







layer {
  bottom: "pool5/7x7_s1"
  top: "loss3/classifier_1"
  name: "loss3/classifier_1"
  type: "InnerProduct"
  param {
    name: "ip_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 625
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "loss3/classifier_1"
  top: "loss3/prob"
  name: "loss3/prob"
  type: "Softmax"
}




layer{
  name: "prob3"
  bottom: "loss3/prob"
  bottom: "label"

  top: "prob3"
  
  type: "ExtractProb"
  propagate_down: 0
  propagate_down: 0
}
layer{
  name: "gaussian/prob3"
  bottom: "prob3"
  top: "gaussian/prob3"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.18
    mean: 0.5
  }
  propagate_down: 0
}
layer{
  name: "l1_norm/prob3"
  bottom: "gaussian/prob3"
  top: "l1_norm/prob3"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}





layer {
  bottom: "loss3/classifier_1"
  bottom: "label"
  bottom: "l1_norm/prob3"

  top: "loss3/loss"
  name: "loss3/loss"
  type: "WeightedSoftmaxWithLoss"
  loss_weight: 1
  propagate_down: 1
  propagate_down: 0
  propagate_down: 0

}






















layer{
  name: "attention/prob3"
  bottom: "prob3"
  top: "attention/prob3"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.68
    mean: 1.0
  }
  propagate_down: 0
}

layer{
  name:"loss2/fc/bn/sc_reshape"
  bottom:"loss2/fc/bn/sc"
  top:"loss2/fc/bn/sc_reshape"

  type:"Reshape"
  reshape_param{
    shape{
      dim:0 
      dim:0 
      dim:1 
      dim:1 
    }
  }
}




## Slice && Pooling

layer{
  name: "slice_data"
  type: "Slice"
  bottom: "loss2/fc/bn/sc_reshape"
  top: "data1"
  top: "data2"
  top: "data3"
  top: "data4"
  top: "data5"
  top: "data6"

  slice_param{
    axis: 0
  }
}


layer{
  name: "slice_attention"
  type: "Slice"
  bottom: "attention/prob3"
  top: "attention_1"
  top: "attention_2"
  top: "attention_3"
  top: "attention_4"
  top: "attention_5"
  top: "attention_6"

  slice_param{
    axis: 0
  }
}

layer{
  name: "attention_1/l1_norm"
  bottom: "attention_1"
  top: "attention_1/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}
layer{
  name: "attention_2/l1_norm"
  bottom: "attention_2"
  top: "attention_2/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}
layer{
  name: "attention_3/l1_norm"
  bottom: "attention_3"
  top: "attention_3/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}

layer{
  name: "attention_4/l1_norm"
  bottom: "attention_4"
  top: "attention_4/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}
layer{
  name: "attention_5/l1_norm"
  bottom: "attention_5"
  top: "attention_5/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}
layer{
  name: "attention_6/l1_norm"
  bottom: "attention_6"
  top: "attention_6/l1_norm"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}






layer{
  name: "feature1"
  bottom: "data1"
  bottom: "attention_1/l1_norm"

  top: "feature1"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}

layer{
  name: "feature2"
  bottom: "data2"
  bottom: "attention_2/l1_norm"

  top: "feature2"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}

layer{
  name: "feature3"
  bottom: "data3"
  bottom: "attention_3/l1_norm"

  top: "feature3"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}

layer{
  name: "feature4"
  bottom: "data4"
  bottom: "attention_4/l1_norm"

  top: "feature4"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}

layer{
  name: "feature5"
  bottom: "data5"
  bottom: "attention_5/l1_norm"

  top: "feature5"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}


layer{
  name: "feature6"
  bottom: "data6"
  bottom: "attention_6/l1_norm"

  top: "feature6"
  type: "BatchPool"
  propagate_down: 1
  propagate_down: 0
}




layer {
  bottom: "feature1"
  bottom: "feature2"
  bottom: "feature3"
  bottom: "feature4"
  bottom: "feature5"
  bottom: "feature6"

  top: "tracklet_feature"
  
  name: "tracklet_feature"
  type: "Concat"
  concat_param {
    axis: 0
  }
}






















layer {
  bottom: "tracklet_feature"
  top: "tracklet_feature/classifier"
  name: "tracklet_feature/classifier"
  type: "InnerProduct"
  param {
    name: "ip_w_tracklet"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip_b_tracklet"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 625
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  bottom: "tracklet_feature/classifier"
  top: "tracklet/prob"

  name: "tracklet/prob"
  type: "Softmax"
}



layer{
  name: "prob4"
  bottom: "tracklet/prob"
  bottom: "tracklet_label"

  top: "prob4"
  
  type: "ExtractProb"
  propagate_down: 0
  propagate_down: 0
}
layer{
  name: "gaussian/prob4"
  bottom: "prob4"
  top: "gaussian/prob4"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.18
    mean: 0.5
  }
  propagate_down: 0
}
layer{
  name: "l1_norm/prob4"
  bottom: "gaussian/prob4"
  top: "l1_norm/prob4"

  type: "Normalization"
    normalization_param{
    norm: L1
  }
}


layer {
  bottom: "tracklet_feature/classifier"
  bottom: "tracklet_label"
  bottom: "l1_norm/prob4"

  top: "tracklet/loss"
  name: "tracklet/loss"
  
  type: "WeightedSoftmaxWithLoss"
  loss_weight: 1

  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
}















layer{
  bottom: "tracklet_feature"
  top: "tracklet_feature/L2Norm"
  
  name: "tracklet_feature/L2Norm"
  type: "Normalization"
    normalization_param{
    norm: L2
  }
}
layer{
  name: "attention/prob4"
  bottom: "prob4"
  top: "attention/prob4"
  
  type: "Gaussian"
  gaussian_param{
    sigma: 0.68
    mean: 1.0
  }
  propagate_down: 0
}

layer {
  bottom: "tracklet_feature/L2Norm"
  bottom: "tracklet_label"
  bottom: "attention/prob4"

  top: "WSiamese/loss_tracklet"
  name: "WSiamese/loss_tracklet"
  
  type: "DistanceWeightedValidPairLossV5"
  loss_weight: 1
  contrastive_loss_param {
    margin: 1.2
  }
  gaussian_param{
    sigma: 1.0
    mean: 0.0
  }

  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
}




layer{
  bottom: "loss2/fc/bn/sc_reshape"
  top: "middle_I_feature/L2Norm"
  
  name: "middle_I_feature/L2Norm"
  type: "Normalization"
    normalization_param{
    norm: L2
  }
}

layer {
  bottom: "middle_I_feature/L2Norm"
  bottom: "label"
  bottom: "attention/prob3"

  top: "WSiamese/loss_image"
  name: "WSiamese/loss_image"
  
  type: "DistanceWeightedValidPairLossV5"
  loss_weight: 1
  contrastive_loss_param {
    margin: 1.2
  }
  gaussian_param{
    sigma: 1.0
    mean: 0.0
  }

  propagate_down: 1
  propagate_down: 0
  propagate_down: 0
}